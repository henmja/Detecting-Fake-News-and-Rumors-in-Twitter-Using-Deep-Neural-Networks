#TF-IDF Wordcloud

#top 50 TF-IDF Array
import copy
real_TFIDF = copy.deepcopy(realArticlesTFIDF)
fake_TFIDF = copy.deepcopy(fakeArticlesTFIDF)

top_50_real_tfidf = []
temp = ''
for i in range(50):
	top_50_real_tfidf.append('')
	top_50_fake_tfidf.append('')
	for user in real_TFIDF:
		for tfidf in real_TFIDF[user]:
			top_50_real_tfidf[i] = tfidf
			temp = user
			
	if i==49 and user==real_TFIDF.keys()[-1]:
		try:
			real_TFIDF[temp].pop(top_50_real_tfidf[i])
		exception IndexError:
			pass

top_50_fake_tfidf = []
temp = ''
for i in range(50):
	for user in fake_TFIDF:
		for tfidf in fake_TFIDF[user]:
			top_50_fake_tfidf[i] = tfidf
			temp = user
			
	if i==49 and user==fake_TFIDF.keys()[-1]:
		try:
			fake_TFIDF[temp].pop(top_50_fake_tfidf[i])
		exception IndexError:
			pass

import matplotlib.pyplot as plt

#convert list to string and generate
unique_string=(" ").join(real_TFIDF)
wordcloud = WordCloud(width = 1000, height = 500).generate(unique_string)
plt.figure(figsize=(15,8))
plt.imshow(wordcloud)
plt.axis("off")
plt.savefig("real_TFIDF_Wordcloud"+".png", bbox_inches='tight')
plt.show()
plt.close()

#convert list to string and generate
unique_string=(" ").join(fake_TFIDF)
wordcloud = WordCloud(width = 1000, height = 500).generate(unique_string)
plt.figure(figsize=(15,8))
plt.imshow(wordcloud)
plt.axis("off")
plt.savefig("real_TFIDF_Wordcloud"+".png", bbox_inches='tight')
plt.show()
plt.close()
